{% set source = sources[0] %}
{% set src_node = source.dependencies[0].node %}
{% set forecast_name = 'forecast_' ~ src_node.name %}

{{ stage('Create Forecast Model Instance') }}

CREATE OR REPLACE SNOWFLAKE.ML.FORECAST
 {{ ref_no_link(node.location.name, forecast_name) }}(
    INPUT_DATA => SYSTEM$QUERY_REFERENCE('
        SELECT
        {% for col in source.columns if not col.forecast and not col.lower_bound and not col.upper_bound %}
            {{ get_source_transform(col) }} AS "{{ col.name }}"
            {%- if not loop.last -%}, {% endif %}
        {% endfor %}
        {{ source.join }}
    '),
    TIMESTAMP_COLNAME => '{{ config.tscol.name }}',
    TARGET_COLNAME => '{{ config.tgtcol.name }}'
)

{% if node.materializationType == 'table' %}
	{{ stage('Create Forecast Table') }}

	CREATE OR REPLACE TABLE {{ ref_no_link(node.location.name, node.name) }}
	(
		{% for col in columns %}
			"{{ col.name }}" {{ col.dataType }}
			{%- if not col.nullable %} NOT NULL
				{%- if col.defaultValue | length > 0 %} DEFAULT {{ col.defaultValue }}{% endif %}
			{% endif %}
			{%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
			{%- if not loop.last -%}, {% endif %}
		{% endfor %}
	)
	{%- if node.description | length > 0 %} COMMENT = '{{ node.description | escape }}'{% endif %}


{% elif node.materializationType == 'view' %}

    {{ stage('Refresh Forecast') }}
    CALL {{ ref_no_link(node.location.name, forecast_name) }}!FORECAST({{ config.fcdays }})

    {{ stage('Create Forecast View') }}

    CREATE OR REPLACE VIEW {{ ref_no_link(node.location.name, node.name) }}
    (
        {% for col in columns %}
            "{{ col.name }}"
            {%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
            {%- if not loop.last -%}, {% endif %}
        {% endfor %}
    )
    {%- if node.description | length > 0 %} COMMENT = '{{ node.description | escape }}'{% endif %}
    AS
    SELECT
    {% for col in source.columns %}       
        {{ get_source_transform(col) }} AS "{{ col.name }}"
        {%- if not loop.last -%}, {% endif %}
    {% endfor %}

    {{ source.join }}

    {% if config.unionforecast %}
    UNION ALL
    SELECT
    {% for col in source.columns %}
        {% if col.id == config.tscol.id %}
            "TS"
        {% elif col.id == config.tgtcol.id %}
            NULL
        {% elif col.forecast or col.lower_bound or col.upper_bound %}
            "{{ col.name }}"
        {% else %}
            {{ get_source_transform(col) }} AS "{{ col.name }}"
        {% endif %}
        {%- if not loop.last -%}, {% endif %}
    {% endfor %}
    FROM TABLE(RESULT_SCAN(-1))
    {% endif %}

{% endif %}